import{_ as e,o,c as a,X as l}from"./chunks/framework.d24d905d.js";const g=JSON.parse('{"title":"任务配置","description":"","frontmatter":{},"headers":[],"relativePath":"config/task-options.md","filePath":"config/task-options.md","lastUpdated":1692843468000}'),i={name:"config/task-options.md"},t=l('<h1 id="task-options" tabindex="-1">任务配置 <a class="header-anchor" href="#task-options" aria-label="Permalink to &quot;任务配置 {#task-options}&quot;">​</a></h1><p>每个任务的单独配置项，设置后会覆盖全局配置。</p><h2 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name {#name}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>[type]:[index]</code></li></ul><p>任务名称, 默认为 <code>任务类型 + 任务索引</code></p><h2 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li></ul><p>任务类型。</p><p>内置任务类型： <code>&#39;html&#39; | &#39;style&#39; | &#39;script&#39; | &#39;static&#39; | &#39;image&#39; | &#39;server&#39; | &#39;remove&#39; | &#39;copy&#39; | &#39;archive&#39; | &#39;user&#39;</code> 。</p><h2 id="input" tabindex="-1">input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;input {#input}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string | string[] | object</code></li></ul><p>指定任务入口文件。</p><h2 id="dest" tabindex="-1">dest <a class="header-anchor" href="#dest" aria-label="Permalink to &quot;dest {#dest}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>dist</code></li></ul><p>指定任务输出路径。</p><blockquote><p>继承 <code>build.outDir</code> 配置，请参见 <a href="./build-options.html#build-outdir">这里</a></p></blockquote><h2 id="base" tabindex="-1">base <a class="header-anchor" href="#base" aria-label="Permalink to &quot;base {#base}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>./src</code></li></ul><p>显式地在创建的 Vinyl 对象上设置 <code>base</code> 属性。</p><blockquote><p>继承 全局 <code>base</code> 配置，请参见 <a href="./shared-options.html#base">这里</a></p></blockquote><h2 id="compiler" tabindex="-1">compiler <a class="header-anchor" href="#compiler" aria-label="Permalink to &quot;compiler {#compiler}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li></ul><p>文件转译工具。仅对任务类型为 <code>html</code>, <code>style</code>, <code>script</code> 有效。</p><ul><li>当 <code>type</code> 为 <code>&#39;html&#39;</code>时, <code>compiler</code> 为 HTML模板引擎；(请参见 <a href="./../guide/task-html.html#html-templater">这里</a>)</li><li>当 <code>type</code> 为 <code>&#39;style&#39;</code>时, <code>compiler</code> 为 CSS预处理器。(请参见 <a href="./../guide/task-style.html#css-preprocessor">这里</a>)</li><li>当 <code>type</code> 为 <code>&#39;script&#39;</code>时, <code>compiler</code> 为 <code>babel</code>。</li></ul><h2 id="compiler-options" tabindex="-1">compilerOptions <a class="header-anchor" href="#compiler-options" aria-label="Permalink to &quot;compilerOptions {#compiler-options}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>object</code></li></ul><p>转译配置项。</p><ul><li>HTML模板引擎 配置项，请参见 <a href="./../guide/task-html.html#configuration">这里</a></li><li>CSS预处理器 配置项，请参见 <a href="./../guide/task-style.html#configuration">这里</a></li><li><code>babel</code> 配置项，请参见 <a href="./../guide/task-script.html#configuration">这里</a></li></ul><h2 id="module" tabindex="-1">module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;module {#module}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>Javascript 文件是否模块化。</p><p>当项目中的JS文件使用了 <code>require</code> 或 <code>import</code> 语句时，请启用模块化。</p><h2 id="minify" tabindex="-1">minify <a class="header-anchor" href="#minify" aria-label="Permalink to &quot;minify {#minify}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | MinifyOptions</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>文件最小化混淆或压缩。</p><blockquote><p>继承 <code>build.minify</code> 配置 或 对应的混淆/压缩配置项，请参见 <a href="./build-options.html#build-minify">这里</a></p></blockquote><h2 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;plugins {#plugins}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>function[]</code></li></ul><p>自定义任务处理流程。 请参见 <a href="./../guide/task-user.html">这里</a></p><h2 id="file-hash" tabindex="-1">fileHash <a class="header-anchor" href="#file-hash" aria-label="Permalink to &quot;fileHash {#file-hash}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean | &#39;-&#39; | &#39;?&#39;</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>文件哈希和版本控制</p><h2 id="sourcemap" tabindex="-1">sourcemap <a class="header-anchor" href="#sourcemap" aria-label="Permalink to &quot;sourcemap {#sourcemap}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>是否生成 source map 文件。</p><blockquote><p>继承 <code>build.sourcemap</code> 配置，请参见 <a href="./build-options.html#build-sourcemap">这里</a></p></blockquote><h2 id="alias" tabindex="-1">alias <a class="header-anchor" href="#alias" aria-label="Permalink to &quot;alias {#alias}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>{ [key: string]: string }</code></li></ul><p>别名替换，会合并全局 <code>alias</code> 配置。</p><blockquote><p>继承 全局 <code>alias</code> 配置，请参见 <a href="./shared-options.html#alias">这里</a></p></blockquote><h2 id="watch" tabindex="-1">watch <a class="header-anchor" href="#watch" aria-label="Permalink to &quot;watch {#watch}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>在 <code>serve</code> 阶段是否监视文件变动并重新编译、刷新页面。</p><h2 id="filename" tabindex="-1">filename <a class="header-anchor" href="#filename" aria-label="Permalink to &quot;filename {#filename}&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>archive</code></li></ul><p>生成的文件名。目前仅对 <code>archive</code> 任务类型有效。</p><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><p>如果需要创建压缩包，可以使用 <code>pipflow pack</code> 命令快速生成压缩包。 请参见 [<a href="./../guide/cli.html#pipflow-pack">这里</a>]。</p></div>',57),c=[t];function r(s,d,n,p,h,u){return o(),a("div",null,c)}const b=e(i,[["render",r]]);export{g as __pageData,b as default};
