import{_ as s,o as a,c as o,Q as p}from"./chunks/framework.5b019ba1.js";const h=JSON.parse('{"title":"开始","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md","lastUpdated":1726820578000}'),l={name:"guide/index.md"},n=p(`<h1 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h1><h2 id="总览" tabindex="-1">总览 <a class="header-anchor" href="#总览" aria-label="Permalink to &quot;总览&quot;">​</a></h2><p><code>pipflow</code> (pipe-workflow) 是一个基于<code>gulp</code>的前端开发工作流。它内置了诸如合并、编译、打包、压缩等功能，极大地简化了前端开发流程。它提供了一组开箱即用的gulp任务和功能，开发者无需从零开始配置就可以立即启动前端项目的开发。</p><p>pipflow的主要功能包括:</p><ul><li>HTML模板渲染 - 内置5款流行的模板引擎,开箱即用</li><li>CSS预处理 - 支持LESS/SASS(SCSS)/Stylus,自动添加浏览器前缀,压缩等</li><li>JavaScript语法转换、合并、压缩、校验、兼容老版本浏览器</li><li>图片优化 - 无损压缩图片,生成雪碧图</li><li>Sourcemap和文件指纹 - 更容易调试和版本控制</li><li>本地开发服务器 - 支持HTTPS和浏览器同步测试</li><li>文件监视 - 自动检测文件变动并重新编译、合并、刷新页面</li><li>自定义任务 - 可以扩展已有任务,满足各种需求</li></ul><p>通过<code>pipflow</code>，开发者可以专注于代码编写，无需浪费时间在重复的工程配置上。它使用简单的命令就可以完成复杂的前端构建工作，并标准化了构建流程，极大地提升了项目之间的一致性和开发效率。</p><div class="tip custom-block"><p class="custom-block-title">💡 温馨说明</p><p>简单易用和预设功能，使其成为<strong>基于gulp工作流</strong>的理想选择。</p></div><h2 id="搭建-pipflow-项目" tabindex="-1">搭建 <code>pipflow</code> 项目 <a class="header-anchor" href="#搭建-pipflow-项目" aria-label="Permalink to &quot;搭建 \`pipflow\` 项目&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">兼容性注意</p><p>pipflow 需要 <a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">Node.js</a> 版本 14.13+，16+。然而，有些模板需要依赖更高的 Node 版本才能正常运行，当你的包管理器发出警告时，请注意升级你的 Node 版本。</p></div><p>运行 <code>create</code> 命令创建新项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pipflow</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-project</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pipflow</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-project</span></span></code></pre></div><p>然后按照提示操作即可！ 具体参数说明请参见 <a href="./cli.html#cli-create">这里</a></p><h2 id="命令行界面" tabindex="-1">命令行界面 <a class="header-anchor" href="#命令行界面" aria-label="Permalink to &quot;命令行界面&quot;">​</a></h2><p>如果在本机全局安装了 <code>@pipflow/cli</code>，进入项目根目录后，可以直接运行 <code>pipflow dev</code> 即可启动当前项目。<br> 下面是通过脚手架创建的 pipflow 项目中默认的 npm scripts：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pipflow dev&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 启动开发服务器，\`pipflow dev\`或\`pw dev\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pipflow build&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 为生产环境构建产物</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;preview&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pipflow task preview&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 本地预览生产构建产物</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;lint&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pipflow task lint&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 代码检查</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pipflow dev&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 启动开发服务器，\`pipflow dev\`或\`pw dev\`</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pipflow build&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 为生产环境构建产物</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;preview&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pipflow task preview&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 本地预览生产构建产物</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;lint&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pipflow task lint&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 代码检查</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>可以指定额外的命令行选项，如 <code>--port</code> 或 <code>--no-open</code>。 运行 <code>pipflow --help</code> 获得完整的命令行选项列表。</p><p>查看 <a href="./cli.html">命令行界面</a> 了解更多细节。</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2>`,18),e=[n];function t(c,r,i,d,E,u){return a(),o("div",null,e)}const q=s(l,[["render",t]]);export{h as __pageData,q as default};
